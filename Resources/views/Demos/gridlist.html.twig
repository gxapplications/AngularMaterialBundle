{% extends "GXAngularMaterialBundle::base.html.twig" %}

{% block title %}GXAngularMaterialBundle:Demos:gridlist{% endblock %}

{% block stylesheets %}
	<style type="text/css">
		.grid {
			position: relative;
			height: 100%;
			list-style: none;
			/* Will be modified by the grid jquery lib, depending on the items */
			-webkit-transition: width 0.2s,
			height 0.2s;
			transition: width 0.2s,
			height 0.2s;
		}
		.grid li {
			position: absolute;
			z-index: 1;
			font-weight: bold;
			line-height: 1em;
			text-align: center;
			-webkit-transition: top 0.2s,
			left 0.2s,
			width 0.2s,
			height 0.2s,
			font-size 0.2s,
			line-height 0.2s;
			transition: top 0.2s,
			left 0.2s,
			width 0.2s,
			height 0.2s,
			font-size 0.2s,
			line-height 0.2s;
		}
		.grid li .inner {
			position: absolute;
			top: 0;
			bottom: 10px;
			left: 10px;
			right: 0;
			-webkit-transition: background 3s;
			transition: background 3s;

			-moz-user-select: none;
			-khtml-user-select: none;
			-webkit-user-select: none;
			user-select: none;
		}
		.grid li.changed .inner {
			background: #ffff66;
			-webkit-transition: none;
			transition: none;
		}
		.grid li.ui-draggable-dragging {
			-webkit-transition: none;
			transition: none;
		}
		.grid li.position-highlight {
			-webkit-transition: none;
			transition: none;
		}
		.grid li.position-highlight .inner {
			background: #333;
		}

		div.gridlist-card {
			background: rgba(255,255,255,0.05);
		}
		div.gridlist-card button.md-mini img.s14 {
			width: 1.4rem;
			height: 1.4rem;
		}

		div.gridlist-card div.handle, div.gridlist-card div.md-fab-toolbar-content {
			cursor: pointer;
		}

	</style>
{% endblock %}

{% block body %}
<div layout="column" layout-fill style="overflow:hidden;" ng-controller="MainCtrl as MainCtrl">

	<md-toolbar md-scroll-shrink>
		<div class="md-toolbar-tools" ng-cloak>
			<h2>
				<span>Toolbar with Icon Buttons</span>
			</h2>
			<span flex></span>
			<md-button aria-label="Homes">
				<md-icon style="line-height:34px;"><img src="{{ asset('bundles/gxangularmaterial/images/android_core_holodark/ic_action_edit.png') }}" width="24" height="24" /></md-icon>
				HOMES TODO
			</md-button>
			<md-button aria-label="Logout">
				<md-icon style="line-height:34px;"><img src="{{ asset('bundles/gxangularmaterial/images/android_core_holodark/ic_action_edit.png') }}" width="24" height="24" /></md-icon>
				LOGOUT TODO
			</md-button>
		</div>
	</md-toolbar>

	<md-content flex>
		<div flex>
			<ul id="grid" class="grid">
				<li class="position-highlight">
					<div class="inner md-whiteframe-1dp"></div>
				</li>
				<li class="position-card">
					<md-card class="md-whiteframe-6dp inner">
						<div flex layout="row" layout-align="center center">
							<md-progress-circular md-diameter="128" md-mode="indeterminate"></md-progress-circular>
						</div>
					</md-card>
				</li>
			</ul>
		</div>
	</md-content>

	<md-fab-toolbar class="md-fab-bottom-right" style="width:100%" md-direction="left" ng-cloak>
		<md-fab-trigger class="align-with-text">
			<md-button aria-label="menu" class="md-fab" ng-class="{{ '{' }}'md-warn': editMode.show == false, 'md-hue-1': editMode.show == true{{ '}' }}">
				<md-icon style="line-height:34px;"><img src="{{ asset('bundles/gxangularmaterial/images/android_core_holodark/ic_action_edit.png') }}" width="24" height="24" /></md-icon>
			</md-button>
		</md-fab-trigger>
		<md-toolbar>
			<md-fab-actions class="md-toolbar-tools">
				<md-switch class="md-hue-1" aria-label="Switch to edit mode" ng-model="editMode.show">
					Edit mode
				</md-switch>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>

				<span ng-show="editMode.show">&nbsp;Colmuns</span>
				<md-slider ng-show="editMode.show" flex="no-shrink" style="width: 10em;"
						   md-discrete ng-model="editMode.columnCount" step="1" min="3" max="7" aria-label="columnCount">
				</md-slider>
				<span ng-show="editMode.show">&nbsp;&nbsp;&nbsp;&nbsp;</span>

				<md-button aria-label="Add card" ng-click="MainCtrl.toggleAddWidgets()">
					<md-icon style="line-height:34px;"><img src="{{ asset('bundles/gxangularmaterial/images/android_core_holodark/ic_action_add_to_queue.png') }}" width="24" height="24" /></md-icon>
					Add card // TODO !0: https://material.angularjs.org/latest/demo/sidenav
				</md-button>

				<md-button aria-label="Refresh" ng-click="MainCtrl.refreshAll()">
					<md-icon style="line-height:34px;"><img src="{{ asset('bundles/gxangularmaterial/images/android_core_holodark/ic_action_refresh.png') }}" width="24" height="24" /></md-icon>
					Refresh
				</md-button>
			</md-fab-actions>
		</md-toolbar>
	</md-fab-toolbar>

</div>

<md-sidenav class="md-sidenav-right md-whiteframe-z2" md-component-id="addWidgetsSidenav" ng-cloak>
	<md-toolbar class="md-theme-light">
		<h1 class="md-toolbar-tools">Add a widget</h1>
	</md-toolbar>
	<md-list ng-controller="AddWidgetsCtrl as AddWidgetsCtrl">
		<md-list-item ng-click="navigateTo('data usage', $event)">
			<md-icon md-svg-icon="cached"></md-icon>
			<p>Data Usage</p>
		</md-list-item>
		<md-divider></md-divider>
		<md-list-item ng-click="navigateTo('data usage', $event)">
			<md-icon md-svg-icon="cached"></md-icon>
			<p>Data Usage</p>
		</md-list-item>
		<md-list-item ng-click="navigateTo('data usage', $event)">
			<md-icon md-svg-icon="cached"></md-icon>
			<p>Data Usage</p>
		</md-list-item>
		<md-list-item ng-click="navigateTo('data usage', $event)">
			<md-icon md-svg-icon="cached"></md-icon>
			<p>Data Usage</p>
		</md-list-item>
		<md-divider></md-divider>
		<md-list-item>
			<md-button ng-click="close()">
				Close Sidenav Right
			</md-button>
		</md-list-item>
	</md-list>
</md-sidenav>

{% endblock %}

{% block javascripts %}
	<script>
		var gridStack = null;
		var loaderUrl = 'gridlist_card';
		var app = angular.module('MyApp', ['ngMaterial']);

		// Angular configuration
		app.config(function($mdThemingProvider, $controllerProvider) {
			$mdThemingProvider.theme('default')
					.dark();
			app.controllerProvider = $controllerProvider;
		});

		// Angular Main controller
		app.controller("MainCtrl", function($rootScope, $scope, $mdSidenav) {
			// edit mode
			$rootScope.editMode = {
				show: false,
				columnCount: 6 // TODO: loaded in twig dynamically
			};
			$scope.editMode = $rootScope.editMode;
			$scope.$watch('editMode.columnCount', function() {
				if (gridStack !== null) // cancel effect at init
					gridStack.setLanes($scope.editMode.columnCount);
			});

			// refresh features
			$rootScope.refresh = []; // functions to execute to force refresh of a card.
			this.refreshAll = function() {
				for (i = 0; i < $rootScope.refresh.length; i++) {
					if (typeof $rootScope.refresh[i] == 'function')
					$rootScope.refresh[i]();
				}
			};

			// sidenav new widgets
			$rootScope.addWidgetsPanel = {
				toggle: function() {
					$mdSidenav('addWidgetsSidenav').toggle();
				},
				isOpen: function() {
					return $mdSidenav('addWidgetsSidenav').isOpen();
				}
			};
			this.toggleAddWidgets = $scope.addWidgetsPanel.toggle;
		});

		// Angular Add widgets sidenav controller
		app.controller('AddWidgetsCtrl', function ($scope, $mdSidenav) {
			$scope.close = function () {
				$mdSidenav('addWidgetsSidenav').close();
			};
		});

		// init
		$(function() {
			gridStack = $('#grid').gridStack({
				matrix: [ // TODO: loaded in twig dynamically
					{id: 1, w: 1, h: 1, x: 0, y: 0},
					{id: 2, w: 1, h: 2, x: 0, y: 1},
					{id: 3, w: 2, h: 2, x: 1, y: 0},
					{id: 4, w: 1, h: 1, x: 1, y: 2},
					{id: 5, w: 2, h: 1, x: 2, y: 2}
				],
				onChange: function(changedItems, matrix) {
					// TODO: save data server side.
					console.log(changedItems);
					console.log(matrix);
				},
				lanes: 6, // TODO: loaded in twig dynamically
				elementPrototype: 'li.position-card',
				elementLoaderUrl: loaderUrl, // TODO
				draggableParams: {
					handle: '.handle',
					helper: 'original'
				}
			});
		});
	</script>
{% endblock %}
